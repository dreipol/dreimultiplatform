buildscript {
    repositories {
        google()
        jcenter()
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }

    }

    dependencies {
        classpath("com.android.tools.build:gradle:4.0.1")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.72")
        classpath("org.jlleitschuh.gradle:ktlint-gradle:9.3.0")

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
plugins {
    id("org.jetbrains.kotlin.multiplatform")
    id("maven-publish")
    id("com.android.library")
}
apply plugin: "org.jlleitschuh.gradle.ktlint"


allprojects {
    repositories {
        mavenCentral()
        google()
        jcenter()
    }
}

group = "ch.dreipol"


kotlin {
    targets {
        targetFromPreset(presets.android, "android")
        final def iOSTarget = System.getenv("SDK_NAME")?.startsWith("iphoneos")   \
                                ? presets.iosArm64 : presets.iosX64

        fromPreset(iOSTarget, 'ios') {
        }

    }
    ios {
        binaries {
            framework()
        }
    }

    android {
        publishAllLibraryVariants()
    }


    sourceSets["commonMain"].dependencies {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-common")
        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core-common:1.3.8")
        api("org.reduxkotlin:redux-kotlin:0.5.3")
    }

    sourceSets["androidMain"].dependencies {
        implementation("org.jetbrains.kotlin:kotlin-stdlib")
        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.8")
        implementation("androidx.appcompat:appcompat:1.1.0")
    }

    sourceSets["iosMain"].dependencies {
        implementation("org.jetbrains.kotlin:kotlin-stdlib")
        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core-native:1.3.5-native-mt")
    }
    sourceSets["iosMain"].dependsOn(sourceSets["commonMain"])
    sourceSets["iosArm64Main"].dependsOn(sourceSets["iosMain"])
    sourceSets["iosX64Main"].dependsOn(sourceSets["iosMain"])


}

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 15
    }
    sourceSets {
        main {
            manifest.srcFile 'src/androidMain/AndroidManifest.xml'
        }
    }
    buildTypes {
        //This is for MultiplatformSettings
        debug {
            // MPP libraries don't currently get this resolution automatically
            matchingFallbacks = ['release']
        }
        release {
            minifyEnabled false
        }
    }
}


// workaround for https://youtrack.jetbrains.com/issue/KT-27170
configurations {
    compileClasspath
}

tasks["build"].dependsOn("ktlintFormat")

publishing {
    repositories {
        maven {
            url = uri("https://maven.pkg.github.com/dreipol/dreimultiplatform")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}
